{"ast":null,"code":"var _jsxFileName = \"/Users/brucezhu/Desktop/box/client/src/App.jsx\",\n    _s = $RefreshSig$();\n\nimport Navigation from \"./components/Navigation\";\nimport Web3 from \"web3\";\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [account, setAccount] = useState();\n  const [editedAccount, setEditedAccount] = useState();\n\n  const loadWeb3 = async () => {// if (window.ethereum) {\n    //   window.web3 = new Web3(window.ethereum);\n    // } else if (window.web3) {\n    //   window.web3 = new Web3(window.web3.currentProvider);\n    // } else {\n    //   window.alert(\"Non-Ethereum browser detected. Need MetaMask!\");\n    // }\n  };\n\n  const loadBlockchainData = async () => {\n    const web3 = window.web3; //when accounts changed\n\n    window.ethereum.on(\"accountsChanged\", async () => {\n      if (window.ethereum) {\n        const accounts = await window.ethereum.request({\n          method: \"eth_requestAccounts\"\n        });\n        setAccount(accounts[0]);\n        setEditedAccount(accounts[0].slice(0, 6) + \"...\" + accounts[0].slice(38, 42));\n      } else {\n        window.alert(\"Non-Ethereum browser detected. Need MetaMask!\");\n      }\n    }); //set up netword id\n\n    const networkId = await web3.eth.net.getId();\n    const networkData = Storage.networks[networkId];\n  };\n\n  useEffect(() => {\n    loadWeb3();\n    loadBlockchainData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Navigation, {\n      account: account,\n      editedAccount: editedAccount,\n      setAccount: setAccount,\n      setEditedAccount: setEditedAccount\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(App, \"3bqnChMUu1wN8sIXKudDMczumhY=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Navigation","Web3","React","useState","useEffect","App","account","setAccount","editedAccount","setEditedAccount","loadWeb3","loadBlockchainData","web3","window","ethereum","on","accounts","request","method","slice","alert","networkId","eth","net","getId","networkData","Storage","networks"],"sources":["/Users/brucezhu/Desktop/box/client/src/App.jsx"],"sourcesContent":["import Navigation from \"./components/Navigation\";\nimport Web3 from \"web3\";\nimport React, { useState, useEffect } from \"react\";\n\nfunction App() {\n  const [account, setAccount] = useState();\n  const [editedAccount, setEditedAccount] = useState();\n\n  const loadWeb3 = async () => {\n    // if (window.ethereum) {\n    //   window.web3 = new Web3(window.ethereum);\n    // } else if (window.web3) {\n    //   window.web3 = new Web3(window.web3.currentProvider);\n    // } else {\n    //   window.alert(\"Non-Ethereum browser detected. Need MetaMask!\");\n    // }\n  };\n\n  const loadBlockchainData = async () => {\n    const web3 = window.web3;\n\n    //when accounts changed\n    window.ethereum.on(\"accountsChanged\", async () => {\n      if (window.ethereum) {\n        const accounts = await window.ethereum.request({\n          method: \"eth_requestAccounts\",\n        });\n        setAccount(accounts[0]);\n        setEditedAccount(\n          accounts[0].slice(0, 6) + \"...\" + accounts[0].slice(38, 42)\n        );\n      } else {\n        window.alert(\"Non-Ethereum browser detected. Need MetaMask!\");\n      }\n    });\n\n    //set up netword id\n    const networkId = await web3.eth.net.getId();\n    const networkData = Storage.networks[networkId];\n  };\n\n  useEffect(() => {\n    loadWeb3();\n    loadBlockchainData();\n  }, []);\n\n  return (\n    <>\n      <Navigation\n        account={account}\n        editedAccount={editedAccount}\n        setAccount={setAccount}\n        setEditedAccount={setEditedAccount}\n      />\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":";;;AAAA,OAAOA,UAAP,MAAuB,yBAAvB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;;AAEA,SAASC,GAAT,GAAe;EAAA;;EACb,MAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBJ,QAAQ,EAAtC;EACA,MAAM,CAACK,aAAD,EAAgBC,gBAAhB,IAAoCN,QAAQ,EAAlD;;EAEA,MAAMO,QAAQ,GAAG,YAAY,CAC3B;IACA;IACA;IACA;IACA;IACA;IACA;EACD,CARD;;EAUA,MAAMC,kBAAkB,GAAG,YAAY;IACrC,MAAMC,IAAI,GAAGC,MAAM,CAACD,IAApB,CADqC,CAGrC;;IACAC,MAAM,CAACC,QAAP,CAAgBC,EAAhB,CAAmB,iBAAnB,EAAsC,YAAY;MAChD,IAAIF,MAAM,CAACC,QAAX,EAAqB;QACnB,MAAME,QAAQ,GAAG,MAAMH,MAAM,CAACC,QAAP,CAAgBG,OAAhB,CAAwB;UAC7CC,MAAM,EAAE;QADqC,CAAxB,CAAvB;QAGAX,UAAU,CAACS,QAAQ,CAAC,CAAD,CAAT,CAAV;QACAP,gBAAgB,CACdO,QAAQ,CAAC,CAAD,CAAR,CAAYG,KAAZ,CAAkB,CAAlB,EAAqB,CAArB,IAA0B,KAA1B,GAAkCH,QAAQ,CAAC,CAAD,CAAR,CAAYG,KAAZ,CAAkB,EAAlB,EAAsB,EAAtB,CADpB,CAAhB;MAGD,CARD,MAQO;QACLN,MAAM,CAACO,KAAP,CAAa,+CAAb;MACD;IACF,CAZD,EAJqC,CAkBrC;;IACA,MAAMC,SAAS,GAAG,MAAMT,IAAI,CAACU,GAAL,CAASC,GAAT,CAAaC,KAAb,EAAxB;IACA,MAAMC,WAAW,GAAGC,OAAO,CAACC,QAAR,CAAiBN,SAAjB,CAApB;EACD,CArBD;;EAuBAjB,SAAS,CAAC,MAAM;IACdM,QAAQ;IACRC,kBAAkB;EACnB,CAHQ,EAGN,EAHM,CAAT;EAKA,oBACE;IAAA,uBACE,QAAC,UAAD;MACE,OAAO,EAAEL,OADX;MAEE,aAAa,EAAEE,aAFjB;MAGE,UAAU,EAAED,UAHd;MAIE,gBAAgB,EAAEE;IAJpB;MAAA;MAAA;MAAA;IAAA;EADF,iBADF;AAUD;;GApDQJ,G;;KAAAA,G;AAsDT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}