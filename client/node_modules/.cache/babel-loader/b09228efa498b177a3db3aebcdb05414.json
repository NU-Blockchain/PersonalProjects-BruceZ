{"ast":null,"code":"var _jsxFileName = \"/Users/brucezhu/Desktop/box/client/src/App.jsx\",\n    _s = $RefreshSig$();\n\nimport Navigation from \"./components/Navigation\"; //import Web3 from \"web3\";\n\nimport React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [account, setAccount] = useState();\n  const [error1, setError] = useState();\n\n  const loadWeb3 = async () => {\n    if (window.ethereum) {\n      try {\n        const accountArray = await window.ethereum.request({\n          method: \"eth_requestAccounts\"\n        });\n        setAccount(accountArray[0]);\n      } catch (error) {\n        if (error.code === 4001) {// User rejected request\n        }\n\n        setError(error);\n      }\n    }\n  }; // async function loadBlockchainData() {\n  //   const web3 = window.web3;\n  //   const accountAddress = await web3.eth.getAccounts();\n  //   setAccount(accountAddress);\n  // }\n\n\n  useEffect(() => {\n    loadWeb3(); //loadBlockchainData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Navigation, {\n      account: account\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(App, \"iWGzsLTRkJsSUAeCZLmK98ez/Go=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Navigation","React","useState","useEffect","App","account","setAccount","error1","setError","loadWeb3","window","ethereum","accountArray","request","method","error","code"],"sources":["/Users/brucezhu/Desktop/box/client/src/App.jsx"],"sourcesContent":["import Navigation from \"./components/Navigation\";\n//import Web3 from \"web3\";\nimport React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\n\nfunction App() {\n  const [account, setAccount] = useState();\n  const [error1, setError] = useState();\n\n  const loadWeb3 = async () => {\n    if (window.ethereum) {\n      try {\n        const accountArray = await window.ethereum.request({\n          method: \"eth_requestAccounts\",\n        });\n        setAccount(accountArray[0]);\n      } catch (error) {\n        if (error.code === 4001) {\n          // User rejected request\n        }\n        setError(error);\n      }\n    }\n  };\n\n  // async function loadBlockchainData() {\n  //   const web3 = window.web3;\n\n  //   const accountAddress = await web3.eth.getAccounts();\n  //   setAccount(accountAddress);\n  // }\n\n  useEffect(() => {\n    loadWeb3();\n    //loadBlockchainData();\n  }, []);\n\n  return (\n    <>\n      <Navigation account={account} />\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":";;;AAAA,OAAOA,UAAP,MAAuB,yBAAvB,C,CACA;;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,WAAP;;;;AAEA,SAASC,GAAT,GAAe;EAAA;;EACb,MAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBJ,QAAQ,EAAtC;EACA,MAAM,CAACK,MAAD,EAASC,QAAT,IAAqBN,QAAQ,EAAnC;;EAEA,MAAMO,QAAQ,GAAG,YAAY;IAC3B,IAAIC,MAAM,CAACC,QAAX,EAAqB;MACnB,IAAI;QACF,MAAMC,YAAY,GAAG,MAAMF,MAAM,CAACC,QAAP,CAAgBE,OAAhB,CAAwB;UACjDC,MAAM,EAAE;QADyC,CAAxB,CAA3B;QAGAR,UAAU,CAACM,YAAY,CAAC,CAAD,CAAb,CAAV;MACD,CALD,CAKE,OAAOG,KAAP,EAAc;QACd,IAAIA,KAAK,CAACC,IAAN,KAAe,IAAnB,EAAyB,CACvB;QACD;;QACDR,QAAQ,CAACO,KAAD,CAAR;MACD;IACF;EACF,CAdD,CAJa,CAoBb;EACA;EAEA;EACA;EACA;;;EAEAZ,SAAS,CAAC,MAAM;IACdM,QAAQ,GADM,CAEd;EACD,CAHQ,EAGN,EAHM,CAAT;EAKA,oBACE;IAAA,uBACE,QAAC,UAAD;MAAY,OAAO,EAAEJ;IAArB;MAAA;MAAA;MAAA;IAAA;EADF,iBADF;AAKD;;GArCQD,G;;KAAAA,G;AAuCT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}