{"ast":null,"code":"var _jsxFileName = \"/Users/brucezhu/Desktop/box/client/src/App.jsx\",\n    _s = $RefreshSig$();\n\nimport Navigation from \"./components/Navigation\"; //import Web3 from \"web3\";\n\nimport React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [account, setAccount] = useState();\n  const [error, setError] = useState();\n\n  async function loadWeb3() {\n    console.log(window.ethereum);\n\n    if (window.ethereum) {\n      {\n        const accounts = await window.ethereum.request({\n          method: \"eth_requestAccounts\"\n        });\n        setAccount(accounts[0]);\n      }\n    }\n  } // async function loadBlockchainData() {\n  //   const web3 = window.web3;\n  //   const accountAddress = await web3.eth.getAccounts();\n  //   setAccount(accountAddress);\n  // }\n\n\n  useEffect(() => {\n    loadWeb3(); //loadBlockchainData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Navigation, {\n      account: account\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(App, \"g13rc9SckaYej1T4+xuhHKLeIww=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Navigation","React","useState","useEffect","App","account","setAccount","error","setError","loadWeb3","console","log","window","ethereum","accounts","request","method"],"sources":["/Users/brucezhu/Desktop/box/client/src/App.jsx"],"sourcesContent":["import Navigation from \"./components/Navigation\";\n//import Web3 from \"web3\";\nimport React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\n\nfunction App() {\n  const [account, setAccount] = useState();\n  const [error, setError] = useState();\n\n  async function loadWeb3() {\n    console.log(window.ethereum);\n    if (window.ethereum) {\n      {\n        const accounts = await window.ethereum.request({\n          method: \"eth_requestAccounts\",\n        });\n        setAccount(accounts[0]);\n      }\n    }\n  }\n\n  // async function loadBlockchainData() {\n  //   const web3 = window.web3;\n\n  //   const accountAddress = await web3.eth.getAccounts();\n  //   setAccount(accountAddress);\n  // }\n\n  useEffect(() => {\n    loadWeb3();\n    //loadBlockchainData();\n  }, []);\n\n  return (\n    <>\n      <Navigation account={account} />\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":";;;AAAA,OAAOA,UAAP,MAAuB,yBAAvB,C,CACA;;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,WAAP;;;;AAEA,SAASC,GAAT,GAAe;EAAA;;EACb,MAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBJ,QAAQ,EAAtC;EACA,MAAM,CAACK,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,EAAlC;;EAEA,eAAeO,QAAf,GAA0B;IACxBC,OAAO,CAACC,GAAR,CAAYC,MAAM,CAACC,QAAnB;;IACA,IAAID,MAAM,CAACC,QAAX,EAAqB;MACnB;QACE,MAAMC,QAAQ,GAAG,MAAMF,MAAM,CAACC,QAAP,CAAgBE,OAAhB,CAAwB;UAC7CC,MAAM,EAAE;QADqC,CAAxB,CAAvB;QAGAV,UAAU,CAACQ,QAAQ,CAAC,CAAD,CAAT,CAAV;MACD;IACF;EACF,CAdY,CAgBb;EACA;EAEA;EACA;EACA;;;EAEAX,SAAS,CAAC,MAAM;IACdM,QAAQ,GADM,CAEd;EACD,CAHQ,EAGN,EAHM,CAAT;EAKA,oBACE;IAAA,uBACE,QAAC,UAAD;MAAY,OAAO,EAAEJ;IAArB;MAAA;MAAA;MAAA;IAAA;EADF,iBADF;AAKD;;GAjCQD,G;;KAAAA,G;AAmCT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}