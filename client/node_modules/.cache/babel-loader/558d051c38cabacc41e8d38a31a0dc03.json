{"ast":null,"code":"var _jsxFileName = \"/Users/brucezhu/Desktop/box/client/src/App.jsx\",\n    _s = $RefreshSig$();\n\nimport Navigation from \"./components/Navigation\";\nimport Web3 from \"web3\";\nimport React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [account, setAccount] = useState();\n  const [editedAccount, setEditedAccount] = useState();\n\n  const loadWeb3 = async () => {\n    if (window.ethereum) {\n      window.web3 = new Web3(window.ethereum);\n      await window.ethereum.enable();\n    } else if (window.web3) {\n      window.web3 = new Web3(window.web3.currentProvider);\n    } else {\n      window.alert(\"Non-Ethereum browser detected. Need MetaMask!\");\n    }\n  };\n\n  const loadBlockchainData = async () => {\n    const web3 = window.web3;\n    const accountAddress = await web3.eth.getAccounts();\n    setAccount(accountAddress[0]);\n  };\n\n  useEffect(() => {\n    loadWeb3();\n    loadBlockchainData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Navigation, {\n      account: account\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(App, \"3bqnChMUu1wN8sIXKudDMczumhY=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Navigation","Web3","React","useState","useEffect","App","account","setAccount","editedAccount","setEditedAccount","loadWeb3","window","ethereum","web3","enable","currentProvider","alert","loadBlockchainData","accountAddress","eth","getAccounts"],"sources":["/Users/brucezhu/Desktop/box/client/src/App.jsx"],"sourcesContent":["import Navigation from \"./components/Navigation\";\nimport Web3 from \"web3\";\nimport React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\n\nfunction App() {\n  const [account, setAccount] = useState();\n  const [editedAccount, setEditedAccount] = useState();\n\n  const loadWeb3 = async () => {\n    if (window.ethereum) {\n      window.web3 = new Web3(window.ethereum);\n      await window.ethereum.enable();\n    } else if (window.web3) {\n      window.web3 = new Web3(window.web3.currentProvider);\n    } else {\n      window.alert(\"Non-Ethereum browser detected. Need MetaMask!\");\n    }\n  };\n  const loadBlockchainData = async () => {\n    const web3 = window.web3;\n\n    const accountAddress = await web3.eth.getAccounts();\n    setAccount(accountAddress[0]);\n  };\n\n  useEffect(() => {\n    loadWeb3();\n    loadBlockchainData();\n  }, []);\n\n  return (\n    <>\n      <Navigation account={account} />\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":";;;AAAA,OAAOA,UAAP,MAAuB,yBAAvB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,WAAP;;;;AAEA,SAASC,GAAT,GAAe;EAAA;;EACb,MAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBJ,QAAQ,EAAtC;EACA,MAAM,CAACK,aAAD,EAAgBC,gBAAhB,IAAoCN,QAAQ,EAAlD;;EAEA,MAAMO,QAAQ,GAAG,YAAY;IAC3B,IAAIC,MAAM,CAACC,QAAX,EAAqB;MACnBD,MAAM,CAACE,IAAP,GAAc,IAAIZ,IAAJ,CAASU,MAAM,CAACC,QAAhB,CAAd;MACA,MAAMD,MAAM,CAACC,QAAP,CAAgBE,MAAhB,EAAN;IACD,CAHD,MAGO,IAAIH,MAAM,CAACE,IAAX,EAAiB;MACtBF,MAAM,CAACE,IAAP,GAAc,IAAIZ,IAAJ,CAASU,MAAM,CAACE,IAAP,CAAYE,eAArB,CAAd;IACD,CAFM,MAEA;MACLJ,MAAM,CAACK,KAAP,CAAa,+CAAb;IACD;EACF,CATD;;EAUA,MAAMC,kBAAkB,GAAG,YAAY;IACrC,MAAMJ,IAAI,GAAGF,MAAM,CAACE,IAApB;IAEA,MAAMK,cAAc,GAAG,MAAML,IAAI,CAACM,GAAL,CAASC,WAAT,EAA7B;IACAb,UAAU,CAACW,cAAc,CAAC,CAAD,CAAf,CAAV;EACD,CALD;;EAOAd,SAAS,CAAC,MAAM;IACdM,QAAQ;IACRO,kBAAkB;EACnB,CAHQ,EAGN,EAHM,CAAT;EAKA,oBACE;IAAA,uBACE,QAAC,UAAD;MAAY,OAAO,EAAEX;IAArB;MAAA;MAAA;MAAA;IAAA;EADF,iBADF;AAKD;;GA/BQD,G;;KAAAA,G;AAiCT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}